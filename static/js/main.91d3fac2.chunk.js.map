{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","tasksList","setTasks","handleClick","e","currentTarget","parentNode","remove","className","map","task","draggable","type","onClick","onSubmit","preventDefault","newTask","taskName","document","getElementById","value","length","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"mPAmDeA,MA/Cf,WACI,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAkBC,EAAlB,KAaA,SAASC,EAAYC,GAEjBA,EAAEC,cAAcC,WAAWC,SAG/B,OACI,qBAAKC,UAAU,kBAAf,SACI,sBAAKA,UAAU,mBAAf,UACI,oBAAIA,UAAU,cAAd,2BACA,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,SAAf,SACI,oBAAIA,UAAU,YAAd,SACKP,EAAUQ,KAAI,SAACC,GAAD,OACP,qBAAIF,UAAU,GAAGG,UAAU,OAA3B,cAAmC,uBAAOH,UAAU,eAAeI,KAAK,WAAWC,QAASV,IAA5F,IAA4GO,EAA5G,cAMhB,qBAAKF,UAAU,cAKnB,uBAAMA,UAAU,OAAOM,SAjCnC,SAAsBV,GAClBA,EAAEW,iBACF,IAJaC,EAITC,EAAWC,SAASC,eAAe,QAAQC,MAC3CH,EAASI,OAAS,IALTL,EAMDC,EANaf,EAAS,GAAD,mBAAKD,GAAL,CAAgBe,MAQjDE,SAASC,eAAe,QAAQC,MAAQ,IA2BhC,UACI,uBAAOE,GAAG,OAAOV,KAAK,SACtB,uBAAOU,GAAG,SAASV,KAAK,oBChC7BW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFhB,SAASC,eAAe,SAM1BI,M","file":"static/js/main.91d3fac2.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\n\nfunction App() {\n    const [tasksList, setTasks] = useState([]);\n\n    const addTask = (newTask) => setTasks([...tasksList, newTask]);\n\n    function handleSubmit(e) {\n        e.preventDefault(); // prevent page from refreshing\n        let taskName = document.getElementById(\"task\").value;\n        if (taskName.length > 0) {\n            addTask(taskName);\n        }\n        document.getElementById(\"task\").value = ''; // reset input field\n    }\n\n    function handleClick(e) {\n        // delete parent li container\n        e.currentTarget.parentNode.remove();\n    }\n    \n    return (   \n        <div className=\"main-background\"> \n            <div className=\"tasks-background\">\n                <h1 className=\"main-header\">My Todo List.</h1>\n                <div className='row'>\n                    <div className=\"column\"> \n                        <ul className=\"task-list\">\n                            {tasksList.map((task) => (\n                                    <li className='' draggable='true'> <input className=\"taskCheckbox\" type=\"checkbox\" onClick={handleClick}/> {task} </li> \n                                ))\n                            }\n                        </ul>\n                    </div>\n\n                    <div className=\"column\">\n\n                    </div>\n\n                </div>\n                <form className=\"form\" onSubmit = {handleSubmit}> \n                    <input id=\"task\" type=\"text\"/>\n                    <input id=\"submit\" type=\"submit\"/>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}